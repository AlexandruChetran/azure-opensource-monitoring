version: '3.8'

networks:
  monitoring-network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.0.100/24
          gateway: 192.168.0.1

volumes:
  grafana_vol: {}
  prometheus_vol: {}

services:
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.1
    container_name: cadvisor
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      #- /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    restart: unless-stopped
    expose:
      - 8080
    networks:
      - monitor-network
    labels:
      org.label-schema.group: "monitoring"
      
  caddy:
    image: caddy:2.6.4
    container_name: caddy
    ports:
      - "3000:3000"
      - "8080:8080"
      - "9090:9090"
    volumes:
      - ./caddy:/etc/caddy
    environment:
      - ADMIN_USER=${ADMIN_USER:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - ADMIN_PASSWORD_HASH=${ADMIN_PASSWORD_HASH:-$2a$14$1l.IozJx7xQRVmlkEQ32OeEEfP5mRxTpbDTCTcXRqn19gXD8YK1pO}
    restart: unless-stopped
    networks:
      - monitor-network
    labels:
      org.label-schema.group: "monitoring"

  
  devops_azure_exporter:
    image: webdevops/azure-devops-exporter
    container_name: az-devops-exporter
    environment:
      - AZURE_DEVOPS_ACCESS_TOKEN=${AZURE_DEVOPS_ACCESS_TOKEN}
      - AZURE_DEVOPS_ORGANISATION=${AZURE_DEVOPS_ORG}
      - AZURE_DEVOPS_API_VERSION=${AZURE_DEVOPS_API}
      - AZ_DEVOPS_SERVER_BIND=${AZ_DEVOPS_SERVER_BIND}
      - AZURE_DEVOPS_URL=${AZURE_DEVOPS_URL}
    command: 
      - '--server.bind=${AZ_DEVOPS_SERVER_BIND}'
      - '--azuredevops.url=${AZURE_DEVOPS_URL}'
      - '--azuredevops.access-token=${AZURE_DEVOPS_ACCESS_TOKEN}'
    networks:
      monitoring-network:
        ipv4_address: 192.168.0.110
    expose:
      - 6000
    restart: unless-stopped
    labels:
      org.label-schema.group: "monitoring"
    
  cloud_azure_exporter:
    image: webdevops/azure-metrics-exporter
    container_name: az-cloud-exporter
    environment:
      - AZURE_CLIENT_ID=${AZURE_CLIENT_ID}
      - AZURE_CLIENT_SECRET=${AZURE_CLIENT_SECRET}
      - AZURE_TENANT_ID=${AZURE_TENANT_ID}S
      - AZURE_SUBSCRIPTION_ID=${AZURE_SUBSCRIPTION_ID}
      - AZ_CLOUD_SERVER_BIND=${AZ_CLOUD_SERVER_BIND}
    command:
      - '--server.bind=${AZ_CLOUD_SERVER_BIND}'
    networks:
      monitoring-network:
        ipv4_address: 192.168.0.111
    expose:
      - 5000
    restart: unless-stopped
    labels:
      org.label-schema.group: "monitoring"

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      monitoring-network:
        ipv4_address: 192.168.0.90
    expose:
      - 9100   
    restart: unless-stopped
    labels:
      org.label-schema.group: "monitoring"

    
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_vol:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      monitoring-network:
        ipv4_address: 192.168.0.112
    expose:
      - 9090
    restart: unless-stopped
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_vol:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GRF_ADMIN_USER=${ADMIN_USER}
      - GRF_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - GRF_USERS_ALLOW_SIGN_UP=false

    networks:
      monitoring-network:
        ipv4_address: 192.168.0.113
    expose: 
      - 3000
    restart: unless-stopped
    labels:
      org.label-schema.group: "monitoring"